package uc.seng201.gui;

import uc.seng201.environment.GameState;

import javax.swing.*;
import java.awt.*;

/**
 * Victory or Defeat screen.
 */
public class EndScreen extends JDialog {

    /**
     * Root panel.
     */
	private JPanel contentPane;
    /**
     * Okay button.
     */
    private JButton buttonOK;
    /**
     * Shows if the user has won or lost.
     */
    private JLabel stateLabel;
    /**
     * Shows why the user won/lost.
     */
    private JLabel labelMessage;
    /**
     * Displays the final score.
     */
    private JLabel finalScoreLabel;
    /**
     * Displays the name of the users ship.
     */
    private JLabel shipNameLabel;
    /**
     * Displays how many days the user took to win/lose.
     */
    private JLabel daysTakenLabel;
    /**
     * Displays if all parts were found or not.
     */
    private JLabel allPartsFoundLabel;

    /**
     * Displays a dialog that shows the player how they performed during the game.
     *
     * @param gameState reference to the current game state.
     * @param isVictory true if the user won the game.
     * @param message why did the user win/lose.
     */
    public EndScreen(GameState gameState, boolean isVictory, String message) {
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        buttonOK.addActionListener(e -> onOK());

        stateLabel.setText(isVictory ? "Victory" : "Failure");
        labelMessage.setText(message);

        shipNameLabel.setText(gameState.getSpaceShip().getShipName());
        daysTakenLabel.setText(String.format("%d of %d", gameState.getCurrentDay(), gameState.getDuration()));
        allPartsFoundLabel.setText(gameState.isMissingShipParts() ? "No" : "Yes");

        gameState.computeScore();
        finalScoreLabel.setText(String.format("%d points", gameState.getScore()));
    }

    /**
     * Handler for the okay button click.
     */
    private void onOK() {
        // add your code here
        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 20, 20, 20);
        contentPane.add(panel1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel2, gbc);
        buttonOK = new JButton();
        buttonOK.setText("Main Menu");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(buttonOK, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(20, 20, 0, 20);
        contentPane.add(panel3, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 10.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel3.add(panel4, gbc);
        stateLabel = new JLabel();
        Font stateLabelFont = this.$$$getFont$$$(null, -1, 36, stateLabel.getFont());
        if (stateLabelFont != null) stateLabel.setFont(stateLabelFont);
        stateLabel.setHorizontalAlignment(0);
        stateLabel.setText("#STATE");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 10.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel4.add(stateLabel, gbc);
        labelMessage = new JLabel();
        labelMessage.setHorizontalAlignment(0);
        labelMessage.setHorizontalTextPosition(2);
        labelMessage.setText("#Message");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 0, 0);
        panel4.add(labelMessage, gbc);
        final JSeparator separator1 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(10, 0, 10, 0);
        panel4.add(separator1, gbc);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weighty = 8.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel3.add(panel5, gbc);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 16, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Days Taken:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(0, 0, 0, 5);
        panel5.add(label1, gbc);
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, -1, 16, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("Ship Name:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(0, 0, 0, 5);
        panel5.add(label2, gbc);
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$(null, -1, 16, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setText("All Parts Found:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(0, 0, 0, 5);
        panel5.add(label3, gbc);
        daysTakenLabel = new JLabel();
        Font daysTakenLabelFont = this.$$$getFont$$$(null, Font.ITALIC, 16, daysTakenLabel.getFont());
        if (daysTakenLabelFont != null) daysTakenLabel.setFont(daysTakenLabelFont);
        daysTakenLabel.setText("Days Taken");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 5, 0, 0);
        panel5.add(daysTakenLabel, gbc);
        shipNameLabel = new JLabel();
        Font shipNameLabelFont = this.$$$getFont$$$(null, Font.ITALIC, 16, shipNameLabel.getFont());
        if (shipNameLabelFont != null) shipNameLabel.setFont(shipNameLabelFont);
        shipNameLabel.setText("Ship Name");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 5, 0, 0);
        panel5.add(shipNameLabel, gbc);
        allPartsFoundLabel = new JLabel();
        Font allPartsFoundLabelFont = this.$$$getFont$$$(null, Font.ITALIC, 16, allPartsFoundLabel.getFont());
        if (allPartsFoundLabelFont != null) allPartsFoundLabel.setFont(allPartsFoundLabelFont);
        allPartsFoundLabel.setText("All Parts Found");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 5, 0, 0);
        panel5.add(allPartsFoundLabel, gbc);
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$(null, -1, 16, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setText("Final Score:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(20, 0, 0, 5);
        panel5.add(label4, gbc);
        finalScoreLabel = new JLabel();
        Font finalScoreLabelFont = this.$$$getFont$$$(null, Font.ITALIC, 16, finalScoreLabel.getFont());
        if (finalScoreLabelFont != null) finalScoreLabel.setFont(finalScoreLabelFont);
        finalScoreLabel.setText("All Parts Found");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 5, 0, 0);
        panel5.add(finalScoreLabel, gbc);
        final JSeparator separator2 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(10, 20, 10, 20);
        contentPane.add(separator2, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
